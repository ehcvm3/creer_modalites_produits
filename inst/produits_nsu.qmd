---
format: html
title: Produits pour l'enqu√™te NSU
subtitle: Modalit√©s et √©l√©ments fixes √† copier-coller
toc: true
lang: fr
embed-resources: true
execute: 
  eval: true
  echo: false
  warning: false
  error: false
---

```{r}
#| label: load helper functions

source(here::here("R", "02_create_options.R"))
```

```{r}
#| label: load data from questionnaire

# construire le chemin vers le questionnaire
chemin_qnr_excel <- fs::dir_ls(
  path = fs::path(here::here(), "01_entree", "02_nsu"),
  type = "file",
  regexp = "(\\.xlsx|\\.xls|\\.xlsm)$"
)

# ing√©rer le contenu brut du questionnaire Excel
excel_df <- chemin_qnr_excel |>
  readxl::read_excel(
    sheet = "S1_Relev√©s",
    col_names = FALSE
  ) |>
  dplyr::rename(
    produit_nom = 1,
    produit_code = 2,
  )

# identifier la ligne apr√®s laquelle l'on retrouve les donn√©es
header_row <- which(excel_df$produit_nom ==  "Libell√©")[1]

produits_nsu <- excel_df |>
  # ne retenir que les lignes apr√®s l'ent√™te
  dplyr::filter(dplyr::row_number() >= header_row + 1) |>
  dplyr::select(produit_code, produit_nom) |>
  # cr√©er une colonne qui capte le groupe de produit
  dplyr::mutate(
    type_produit = dplyr::if_else(
      condition = is.na(produit_code),
      true = produit_nom,
      false = NA_character_
    )
  ) |>
  # copier vers le bas les noms, les codes, et les groupes de produit
  tidyr::fill(c(produit_code, produit_nom, type_produit), .direction = "down") |>
  dplyr::distinct(produit_code, .keep_all = TRUE) |>
  dplyr::filter(!is.na(produit_code))
```


```{r}
# liste des noms des groupes de produits
groupes_produits <- c(
  "C√âR√âALES ET PAINS",
  "VIANDE",
  "POISSON ET FRUITS DE MER",
  "LAIT, FROMAGE ET OEUFS",
  "HUILES ET GRAISSES",
  "FRUITS",
  "L√âGUMES",
  "LEGUMINEUSES ET TUBERCULES",
  "SUCRE, MIEL, CHOCOLAT ET CONFISERIE",
  "EPICES, CONDIMENTS ET AUTRES",
  "BOISSONS"
)

# cr√©er une liste dont chaque √©l√©ment repr√©sente un groupe de produits
# et dont le contenu est un vecteur des codes de produits pour ce groupe
codes_produit_par_groupe <- purrr::map(
  .x = groupes_produits,
  .f = ~ get_products_for_food_group(
    product_df = produits_nsu,
    food_group = .x
  )
)
```

## C√©r√©ales et pains üçö

```{r}
#| label: c√©r√©ales
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[1]]
)
```

## Viandes ü•©

```{r}
#| label: viandes
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[2]]
)
```

## Poissons et fruits de mer üêü

```{r}
#| label: poissons
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[3]]
)
```

## Lait, fromage, et oeufs ü•õüßÄü•ö

```{r}
#| label: laitier
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[4]]
)
```

## Huiles et graisses üßà

```{r}
#| label: huiles
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[5]]
)
```

## Fruits üçâ

```{r}
#| label: fruits
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[6]]
)
```

## L√©gumes ü´ë

```{r}
#| label: l√©gumes
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[7]]
)
```

## L√©gumineuses et tubercules üç†

```{r}
#| label: l√©gumineuses et tubercules
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[8]]
)
```

## Sucre, miel, chocolat et confiserie üç´

```{r}
#| label: sucreries
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[9]]
)
```

## √âpices, condiments, et autre üßÇ

```{r}
#| label: √©pices
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[10]]
)
```

## Boissons ‚òï

```{r}
#| label: boissons
creer_modalites_a_copier(
  produits_df = produits_nsu,
  produits_codes = codes_produit_par_groupe[[11]]
)
```
