---
format: html
toc: true
toc-depth: 3
lang: fr
embed-resources: true
execute: 
  eval: true
  echo: false
  warning: false
  error: false
---

```{r}
#| label: load helper functions

source(here::here("R", "02_create_options.R"))
```

```{r}
#| label: load data from questionnaire

# construire le chemin vers le questionnaire
chemin_qnr_excel <- fs::dir_ls(
  path = fs::path(here::here(), "01_entree"),
  type = "file",
  regexp = "(\\.xlsx|\\.xls|\\.xlsm)$"
)

# créer une base des produits à partir du questionnaire Excel de l'EHCVM3
produits <- chemin_qnr_excel |>
  readxl::read_excel(
    sheet = "S7b_Conso_Al",
    skip = 16
  ) |>
  dplyr::rename(
    produit_code = 1,
    produit_nom = 2
  ) |>
  dplyr::select(produit_code, produit_nom) |>
  dplyr::mutate(
    type_produit = dplyr::if_else(
      condition = is.na(produit_code),
      true = produit_nom,
      false = NA_character_
    )
  ) |>
  tidyr::fill(type_produit, .direction = "down") |>
  dplyr::filter(!is.na(produit_code))
```

```{r}
groupes_produits <- c(
  "CÉRÉALES ET PAINS",
  "VIANDE",
  "POISSON ET FRUITS DE MER",
  "LAIT, FROMAGE ET OEUFS",
  "HUILES ET GRAISSES",
  "FRUITS",
  "LÉGUMES",
  "LEGUMINEUSES ET TUBERCULES",
  "SUCRE, MIEL, CHOCOLAT ET CONFISERIE",
  "EPICES, CONDIMENTS ET AUTRES",
  "BOISSONS"
)

produits_codes <- purrr::map(
  .x = groupes_produits,
  .f = ~ get_products_for_food_group(
    product_df = produits,
    food_group = .x
  )
)

produits_codes <- setNames(
  object = produits_codes,
  nm = groupes_produits
)
```

## Questions oui-non

### Céréales et pains

```{r}
#| label: céréales
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[1]]
)
```

### Viandes

```{r}
#| label: viandes
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[2]]
)
```

### Poissons et fruits de mer

```{r}
#| label: poissons
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[3]]
)
```

### Lait, fromage, et oeufs

```{r}
#| label: laitier
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[4]]
)
```

### Huiles et graisses

```{r}
#| label: huiles
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[5]]
)
```

### Fruits

```{r}
#| label: fruits
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[6]]
)
```

### Légumes

```{r}
#| label: légumes
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[7]]
)
```

### Légumineuses et tubercules

```{r}
#| label: légumineuses et tubercules
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[8]]
)
```

### Sucre, miel, chocolat et confiserie

```{r}
#| label: sucreries
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[9]]
)
```

### Épices, condiments, et autre

```{r}
#| label: épices
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[10]]
)
```

### Boissons

```{r}
#| label: boissons
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = produits_codes[[11]]
)
```

## Rosters

### Roster 1 (`conso_alim_1`)

#### Unités fixes

```{r}
#| label: items, roster 1
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = c(1:172) # du début à la fin de fruits
)
```

#### Condition d'activation

```cpp
s07Bq02_cereales.Yes.Contains(@rowcode) ||
s07Bq02_viandes.Yes.Contains(@rowcode) ||
s07Bq02_poissons.Yes.Contains(@rowcode) ||
s07Bq02_lait.Yes.Contains(@rowcode) ||
s07Bq02_huiles.Yes.Contains(@rowcode) ||
s07Bq02_fruits.Yes.Contains(@rowcode) ||
```

### Roster 2 (`conso_alim_2`)

#### Unités fixes

```{r}
#| label: items, roster 2
creer_modalites_a_copier(
  produits_df = produits,
  produits_codes = c(173:291) # des légumes à la fin de la liste
)
```

#### Condition d'activation

```cpp
s07Bq02_legumes.Yes.Contains(@rowcode) ||
s07Bq02_legtub.Yes.Contains(@rowcode) ||
s07Bq02_cereales.Yes.Contains(@rowcode) ||
s07Bq02_viandes.Yes.Contains(@rowcode) ||
s07Bq02_poissons.Yes.Contains(@rowcode) ||
s07Bq02_lait.Yes.Contains(@rowcode) ||
s07Bq02_huiles.Yes.Contains(@rowcode) ||
s07Bq02_fruits.Yes.Contains(@rowcode) ||
s07Bq02_legumes.Yes.Contains(@rowcode) ||
s07Bq02_legtub.Yes.Contains(@rowcode)
```

## Macros

### `groupe_de_produits`

```cpp
// céréales
@rowcode.InRange(1, 39) ? 1 :
// viandes
@rowcode.InRange(40, 84) ? 2 :
// poissons
@rowcode.InRange(85, 118) ? 3 :
// laitier
@rowcode.InRange(119, 130) ? 4 :
// huiles
@rowcode.InRange(131, 144) ? 5 :
// fruits
@rowcode.InRange(145, 172) ? 6 :
// légumes
@rowcode.InRange(173, 203) ? 7 :
// légumineuses et tubercules
@rowcode.InRange(204, 243) ? 8 :
// sucreries
@rowcode.InRange(244, 250) ? 9 :
// épices
@rowcode.InRange(251, 275) ? 10 :
// boissons
@rowcode.InRange(276, 291) ? 11 :
0
```

### `produits_alim_autre`

```cpp
@rowcode.InList(

  /* céréales */
  12, // Autres céréales
  21, // Autres farines de céréales
  22, // Autres semoules de céréales
  26, // Autres pâtes alimentaires

  /* viandes */
  45, // Viande boeuf: autre sans os 
  46, // Viande boeuf: autre avec os 
  54, // Viande de porc: autres parties
  64, // Autres gibiers frais (reptiles, etc.)
  67, // Autres gibiers fumé/séché (reptiles, etc.)
  72, // Viande de poulet: autres morceaux
  74, // Viande d'autres volailles domestiques
  78, // Autre volaille domestique sur pied
  84, // Autres viandes n.d.a. 

  /* poissons et fruits de mer */
  112, // Autres fruits de mer
  118, // Autre insectes

  /* produits laitiers */
  129, // Autres produits laitiers

  /* huiles */
  144, // Autres huiles alimentaires n.d.a. (maïs, tournesol, coco, lait de vache, etc.)

  /* fruits */
  171, // Autres fruits locaux (liane sauvage, pomme sauvage, noisette, mangue sauvage, etc.)
  172, //	Autres fruits importés (raisin, fraise, poire, etc.)

  /* légumes */
  201, // Autres légumes en feuilles
  202, // Autre légumes frais n.d.a

  /* légumineuses, tubercules */
  207, // Autres légumes secs n.d.a
  234, // Autres tubercules n.d.a
  239, // Bâton de manioc autres (mitumba, etc.)

  /* épices, condiments */
  265, // Autres vinaigres
  272, // Autres condiments (persil, céléri, etc.)
  275, // Autres produits alimentaires (noix de pomme sauvage)

  /* boissons */
  281  // Autres tisanes et infusions n.d.a. (quinqueliba, citronnelle, etc.)
)
```

### `produits_sans_autoproduction`

```cpp
/* CÉRÉALES ET PAINS */

(
@rowcode != 3	&& // Riz importé 1
@rowcode != 4	&& // Riz importé 2
@rowcode != 5	&& // Riz importé 3
@rowcode != 23	&& // Macaroni
@rowcode != 24	&& // Spaghettis
@rowcode != 25	&& // Vermicelles
@rowcode != 26	&& // Autres pâtes alimentaires
@rowcode != 31	// Céréales de petit déjeuner
)

&&

/* VIANDE */

(
@rowcode != 83	// Conserves de viande
)

&&

/* POISSON ET FRUITS DE MER */

(
@rowcode != 114	// Conserves de poisson 
)

&&

/* LAIT, FROMAGE ET OEUFS */

(
@rowcode != 123	&& // Lait concentré sucré
@rowcode != 124	&& // Lait concentré non-sucré
@rowcode != 125	&& // Lait en poudre
@rowcode != 127	&& // Lait pour bébé
@rowcode != 128	// Farines pour bébé
)

&&

/* HUILE */

(
@rowcode != 138	&& // Huile de soja 
@rowcode != 139 &&	// Huile de coton
@rowcode != 142 // Huile d'olive
)

&&

/* FRUITS */

(
@rowcode != 172 /// autres fruits importés
)

&&

/* SUCRE, MIEL, CHOCOLAT ET CONFISERIE */

(
@rowcode != 187	&& // Sucre en poudre 
@rowcode != 188	// Sucre en morceaux
)

&&

/* EPICES, CONDIMENTS ET AUTRES */

(
@rowcode != 244	&& // Cube alimentaire (Maggi, Jumbo, )
@rowcode != 245	// Arôme (Maggi, Jumbo, etc.)
)

&&

/* BOISSONS */

(
@rowcode != 276	&& // Café en poudre soluble
@rowcode != 278	&& // Thé en sachet
@rowcode != 280	&& // Chocolat soluble en poudre
@rowcode != 283	&& // Eau minérale/filtrée en bouteille importée
@rowcode != 287	&& // Boissons gazeuses (Coca, Fanta, Vimto, Sprite, etc.)
@rowcode != 288	&& // Boissons énergisantes (cody's, 3X, rinho, doppel, okalamar, etc.)
@rowcode != 289	&& // Jus en poudre
@rowcode != 291	// Bières industrielles
)
```